version: '3.8'

services:
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - '27017:27017'
    restart: always
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', 'db.runCommand({ ping: 1 })']
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:4-management
    container_name: rabbitmq
    ports:
      - '5672:5672' # RabbitMQ broker port
      - '15672:15672' # Management UI port
    volumes:
      - rabbitmq_data:/data/rabbitmq
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  consumer:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: ['node', 'dist/consumer/index.js']
    ports:
      - '3002:3000'

  producer:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: ['node', 'dist/producer/index.js'] # Producer-specific entry point
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - '3001:3000'

volumes:
  mongo_data:
  rabbitmq_data:
